---
- name: prepare k3s nodes
  hosts: k3s_nodes
  become: true
  roles:
    - role: kubernetes_nodes

- name: set up first k3s control nodes
  hosts: k3s_controllers[0]
  become: true
  roles:
    - role: kubernetes_controllers

- name: set up remaining k3s control nodes
  hosts: k3s_controllers[1:]
  become: true
  roles:
    - role: kubernetes_controllers


# This needs to be done before the worker node are set up
# so they can register through the load-balancer, otherwise
# they won't be able to use it.
- name: set the HAProxy load balancer
  hosts: k3s_api_proxy
  become: true
  roles:
    - role: k3s_haproxy
      when: do_haproxy is undefined or do_haproxy | bool

- name: set up k3s DE worker nodes
  hosts: k3s_de_workers
  become: true
  roles:
    - role: kubernetes_service_workers

- name: set up k3s VICE worker nodes
  hosts: k3s_vice_workers
  become: true
  roles:
    - role: kubernetes_vice_workers

- name: set up k3s GPU worker nodes
  hosts: k3s_gpu_workers
  become: true
  roles:
    - role: kubernetes_gpu_workers

- name: set up k3s OpenSearch worker nodes
  hosts: k3s_opensearch_workers
  become: true
  roles:
    - role: kubernetes_opensearch_workers

# This is limited to the first controller node to prevent it from
# running multiple times, once per host. It's not actually limited
# to the first controller node.
- name: set up irods-csi-driver
  hosts: k3s_controllers[0]
  connection: local
  become: false
  roles:
    - role: kubernetes_irods_csi_driver

# This is limited to the first controller node to prevent it from
# running multiple times, once per host. It's not actually limited
# to the first controller node.
- name: set up kubernetes requirements for the DE
  hosts: k3s_controllers[0]
  connection: local
  become: false
  roles:
    - role: kubernetes_de_reqs
